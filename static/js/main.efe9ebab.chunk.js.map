{"version":3,"sources":["utils/getLocationQuery.js","common/Title.js","components/mobile/Search.js","components/mobile/SearchHistory.js","components/mobile/NavigationBar.js","common/Copyright.js","common/KeywordResult.js","containers/MobileView.js","components/desktop/Search.js","common/ExactPhraseTip.js","components/desktop/SearchHistory.js","containers/DesktopView.js","common/Footer.js","utils/searchUtil.js","containers/App.js","serviceWorker.js","index.js","helpers/constants.js","images/readingTime.svg"],"names":["location","hash","keyword","searchTypes","passages","queryArr","split","length","response","type","query","includes","Title","props","isMobileView","toggleSearch","resetApp","window","href","className","title","tabIndex","onClick","onKeyPress","Search","onSearch","isEnteringInput","useState","text","setText","setType","s","m","offset","onSubmit","e","preventDefault","id","value","placeholder","onChange","target","waves","SearchHistory","isHistoryExpanded","previousSearches","setIsHistoryExpanded","bottom","duration","when","map","search","key","role","tab","NavigationBar","isSearchExpanded","shouldDisplayNavBtn","prevChapRef","nextChapRef","isInitialState","rel","Copyright","KeywordResult","result","content","reference","chapter","MobileView","state","setState","handleSearch","addToHistory","a","trim","replace","handleInputListener","screen","height","_this","requestAnimationFrame","searchInput","document","getElementById","addEventListener","this","data","getLocationQuery","getNextChapter","getPrevChapter","isLoading","passageSearchResults","keywordSearchResults","keywordQuery","passageSearchResultsInitial","top","keywordSearchResultsInitial","results","total_results","containerClassName","activeClassName","pageCount","total_pages","pageRangeDisplayed","marginPagesDisplayed","initialPage","page","disableInitialCallback","onPageChange","pageNumber","selected","Component","isExact","setIsExact","updatedText","offLabel","onLabel","tooltip","left","DesktopView","isPassageExpanded","isKeywordExpanded","xl","l","header","expanded","node","icon","src","ReadingTimeSvg","alt","Footer","config","proxy","headers","getPassageResults","axios","get","Error","ReactHtmlParser","getKeywordResults","App","handleSearchHistory","filter","item","push","handleKeyWordSearch","charAt","toUpperCase","slice","handlePassageSearch","passage_meta","canonical","console","log","error","toast","prevChapArr","prev_chapter","join","nextChapArr","next_chapter","isDesktop","path","render","autoClose","pauseOnHover","withSizes","width","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message","exports","chapter_start","chapter_end","prev_verse","next_verse","module"],"mappings":"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","file":"static/js/main.efe9ebab.chunk.js","sourcesContent":["import { searchTypes } from '../helpers/constants';\n\nexport default function (location) {\n    const { hash } = location;\n    const { keyword, passages } = searchTypes;\n\n    const queryArr = hash.split('q=');\n    \n    if (hash === '' || queryArr.length === 1) return\n    \n    let response = {\n        type: passages,\n        query: queryArr[1],\n    };\n    \n    if (hash.includes(keyword)) {\n        response.type = keyword;\n    }\n\n    return response;\n}","import React from 'react';\n\nfunction Title (props) {\n  const { isMobileView, toggleSearch } = props;\n\n  const resetApp = () => {\n    window.location.href = \"/justScripture\";\n    \n    if (isMobileView) {\n      toggleSearch();\n    }\n  }\n  \n  return (\n    <div\n      className={isMobileView ? \"title-container mobile\" : \"title-container\"}\n      title=\"Reset Searches\"\n    >\n        <h2 \n          tabIndex={0}\n          onClick={resetApp}\n          onKeyPress={resetApp} \n          className=\"text\"\n        >\n          Just Scripture\n        </h2>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { useState } from 'react';\nimport { TextInput, Button, Row, Col, Icon } from 'react-materialize';\nimport { searchTypes } from '../../helpers/constants';\n\nfunction Search (props) {\n\n    const { onSearch, isEnteringInput } = props;\n    const [text, setText] = useState('');\n    const [type, setType] = useState(searchTypes.passages);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        onSearch(text, type, true);\n        setText(''); \n    }\n\n    return (\n        <div className=\"mobile-search-container\">\n            <div className={type === searchTypes.passages ? \"wrapper passages\": \"wrapper keyword\"}>\n                <Row className={isEnteringInput ? \"type-row no-padding-bottom\" : \"type-row\"}>\n                    <Col \n                        className={isEnteringInput ? \"type-col no-padding-bottom\" : \"type-col\"} \n                        s={10} \n                        m={8} \n                        offset=\"s1 m2\"\n                    >\n                        <Button\n                            className={type === searchTypes.passages ? \"type-btn passage-btn active\" : \"type-btn passage-btn\"}\n                            onClick={() => setType(searchTypes.passages)}\n                            onKeyPress={() => setType(searchTypes.passages)}\n                        >\n                            {type === searchTypes.passages &&\n                                <Icon>bookmark_border</Icon>\n                            }\n                            Passages\n                        </Button>\n                        <Button\n                            className={type === searchTypes.keyword ? \"type-btn keyword-btn active\" : \"type-btn keyword-btn\"}\n                            onClick={() => setType(searchTypes.keyword)}\n                            onKeyPress={() => setType(searchTypes.keyword)}\n                        >\n                            {type === searchTypes.keyword &&\n                                <Icon>search</Icon>\n                            }\n                            Keyword\n                        </Button>\n                    \n                        <form onSubmit={handleSearch}>\n                            <Row>\n                                <Col s={10} offset=\"s1\">\n                                    <TextInput \n                                        id=\"search\"\n                                        s={12}\n                                        value={text}\n                                        placeholder={type === searchTypes.keyword ? \"Repent\" : \"John 3:1-10\"}\n                                        onChange={(e) => setText(e.target.value)}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12} className=\"btn-wrapper\">\n                                    <Button \n                                        className=\"search-btn\"\n                                        type=\"submit\"\n                                        waves=\"light\"\n                                    >\n                                        Search\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </form>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    );\n}\n\nexport default Search;\n","import React from 'react';\nimport { Row, Col, Icon } from 'react-materialize';\nimport { searchTypes } from '../../helpers/constants';\nimport { Fade } from 'react-reveal';\n\nfunction SearchHistory (props) {\n\n    const { \n        onSearch, \n        isHistoryExpanded,\n        previousSearches,\n        setIsHistoryExpanded,\n    } = props;\n\n    return (\n        <Row className={isHistoryExpanded ? \"mobile-search-history-row\" : \"mobile-search-history-row no-display\"}>\n            <Col s={12} className=\"wrapper\">\n              <Fade bottom duration={750} when={isHistoryExpanded}>\n                {isHistoryExpanded && (\n                  <>\n                    <h5 className=\"header\">Search History</h5>\n                    {previousSearches.map(search => (\n                      <Row \n                        key={`mobile-${search.query}`}\n                        role=\"button\"\n                        tab={0}\n                        className=\"search-item\"\n                        onClick={() => {\n                          setIsHistoryExpanded(false);\n                          onSearch(search.query, search.type);\n                        }}\n                        onKeyPress={() => {\n                          setIsHistoryExpanded(false);\n                          onSearch(search.query, search.type);\n                        }}\n                      >\n                        <h6 className=\"truncate\">{search.title}</h6>\n                        {search.type === searchTypes.keyword ? (\n                          <Icon className=\"keyword-icon\">short_text</Icon>\n                        ) : (\n                          <Icon className=\"passage-icon\">bookmark_border</Icon>\n                        )}\n                      </Row>\n                    ))}\n                  </>\n                )}\n              </Fade>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SearchHistory;\n","import React, { useState } from 'react';\nimport { Row, Col, Icon } from 'react-materialize';\nimport { searchTypes } from '../../helpers/constants';\nimport Search from './Search';\nimport { Fade } from 'react-reveal';\nimport SearchHistory from './SearchHistory';\n\nfunction NavigationBar (props) {\n\n    const { \n        onSearch, \n        toggleSearch,\n        isEnteringInput, \n        isSearchExpanded,\n        shouldDisplayNavBtn,\n        prevChapRef,\n        nextChapRef,\n        isInitialState,\n        previousSearches,\n    } = props;\n\n    const [isHistoryExpanded, setIsHistoryExpanded] = useState(false);\n\n    const handleSearchToggle = () => {\n      if (isHistoryExpanded) setIsHistoryExpanded(false);\n      toggleSearch();\n    }\n\n    const handleSearchHistoryToggle = () => {\n      if (isSearchExpanded) toggleSearch();\n      setIsHistoryExpanded(!isHistoryExpanded);\n    }\n\n    return (\n        <Row className=\"navigator-row\">\n            { isSearchExpanded &&\n              <Col s={12} className=\"author-col\">\n                <small>{'Created by '}\n                  <a \n                  href=\"https://jamesmart77.github.io\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  >\n                    James Martineau\n                  </a>\n                </small>\n              </Col>\n            }\n            <Col s={12} className=\"mobile-search-wrapper\">\n              <Fade bottom duration={750} when={isSearchExpanded}>\n                {isSearchExpanded &&\n                  <Search \n                    isEnteringInput={isEnteringInput}\n                    onSearch={onSearch} \n                  />\n                }\n              </Fade>\n            </Col>\n\n            <SearchHistory \n              previousSearches={previousSearches}\n              isHistoryExpanded={isHistoryExpanded}\n              onSearch={onSearch}\n              setIsHistoryExpanded={setIsHistoryExpanded}\n            />\n\n            <Col s={3}>\n                {shouldDisplayNavBtn && prevChapRef && (\n                  <div\n                    className=\"chapter-nav\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => onSearch(prevChapRef, searchTypes.passages)}\n                    onKeyPress={() => onSearch(prevChapRef, searchTypes.passages)}\n                    title=\"Previous Chapter\"\n                  >\n                    <Icon>chevron_left</Icon>\n                  </div>\n                )}\n            </Col>\n            <Col s={previousSearches.length > 0 ? 3 : 6} className=\"search-toggle-col\">\n                {!isInitialState &&\n                  <div className=\"search-toggle-btn\" onClick={handleSearchToggle}>\n                      <Icon>{isSearchExpanded ? 'keyboard_arrow_down' : 'search'}</Icon>\n                  </div>\n                }\n            </Col>\n            {previousSearches.length > 0 && (\n              <Col s={3} className=\"search-history-col\">\n                  <div className=\"search-history-btn\" onClick={() => handleSearchHistoryToggle()}>\n                      <Icon>{isHistoryExpanded ? 'keyboard_arrow_down' : 'history'}</Icon>\n                  </div>\n              </Col>\n            )}\n            <Col s={3}>\n                {shouldDisplayNavBtn && nextChapRef ? (\n                  <div\n                    className=\"chapter-nav nav-right\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => onSearch(nextChapRef, searchTypes.passages)}\n                    onKeyPress={() => onSearch(nextChapRef, searchTypes.passages)}\n                    title=\"Next Chapter\"\n                  >\n                    <Icon>chevron_right</Icon>\n                  </div>\n                ) : (\n                  <></>\n                )}\n            </Col>\n        </Row>\n    );\n}\n\nexport default NavigationBar;\n","import React from 'react';\n\nfunction Copyright (props) {\n  const { isMobileView } = props;\n\n  return (\n    <div className={isMobileView ? \"copyright-container mobile\" : \"copyright-container\"}>\n      <small>\n        Scripture quotations are from the ESV® Bible (The Holy Bible, English Standard Version®), \n        copyright &copy; 2001 by Crossway, a publishing ministry of Good News Publishers. \n        Used by permission. All rights reserved. You may not copy or download more than 500 consecutive \n        verses of the ESV Bible or more than one half of any book of the ESV Bible.\n      </small>\n    </div>\n  );\n}\n\nexport default Copyright;\n","import React from 'react';\nimport { Fade } from 'react-reveal';\nimport { searchTypes } from '../helpers/constants';\n\nfunction KeywordResult (result) {\n  const { content, reference, search } = result\n  const chapter = reference.split(\":\")[0];\n\n  return (\n    <Fade bottom duration={500}>\n      <div className=\"keyword-result-container\">\n        <h5 className=\"title\">{reference}</h5>\n        <div className=\"text\">{content}</div>\n        <div \n          role=\"button\"\n          tabIndex={0}\n          className=\"read-chapter\"\n          title={`Read ${chapter}`}\n          onClick={() => search(chapter, searchTypes.passages)}\n          onKeyPress={() => search(chapter, searchTypes.passages)}\n        >\n          Read Chapter\n        </div>\n      </div>\n    </Fade>\n  );\n}\n\nexport default KeywordResult;\n","import React, { Component } from 'react';\nimport { Row, Col, Preloader } from 'react-materialize';\nimport { keywordSearchResultsInitial, passageSearchResultsInitial } from '../helpers/constants';\nimport { Fade } from 'react-reveal';\nimport getLocationQuery from '../utils/getLocationQuery';\nimport Title from '../common/Title';\nimport NavigationBar from '../components/mobile/NavigationBar';\nimport Copyright from '../common/Copyright';\nimport KeywordResult from '../common/KeywordResult';\nimport ReactPaginate from 'react-paginate';\nimport { searchTypes } from '../helpers/constants';\n\nclass MobileView extends Component {\n  state = {\n    isSearchExpanded: false,\n    isEnteringInput: false,\n  }\n\n  componentDidMount(){\n    const { location, onSearch } = this.props;\n    const data = getLocationQuery(location);\n    \n    if (data) {\n      onSearch(data.query, data.type);\n    } else {\n      this.setState({isSearchExpanded: true});\n    }\n    this.handleInputListener();\n  }\n\n  toggleSearch = () => {\n    const { isSearchExpanded } = this.state;\n    this.setState({ isSearchExpanded: !isSearchExpanded });\n  }\n\n  handleSearch = async (text, type, addToHistory) => {\n    const { onSearch } = this.props;\n    \n    await this.setState({\n      isSearchExpanded: false,\n      isEnteringInput: false,\n    });\n    \n    const query = text.trim().replace(/ /g, '+');\n    onSearch(query, type, addToHistory, text);\n  }\n\n  handleInputListener = () => {\n    if (window.screen.height > 700) return;\n    \n    const _this = this;\n  \n    /* \n    wait for DOM to paint before running listener dependent code.\n    need to modify CSS for devices < 700 px high for input visibility\n    */\n    window.requestAnimationFrame(function() {\n      const searchInput = document.getElementById('search');\n\n      if (searchInput) {\n        searchInput.addEventListener('focus', () => {\n            _this.setState({isEnteringInput: true});  \n          });\n      }\n    })\n  }\n\n\n  render() {\n    const { isSearchExpanded, isEnteringInput } = this.state;\n\n    const {\n      getNextChapter,\n      getPrevChapter,\n      isLoading,\n      passageSearchResults,\n      keywordSearchResults,\n      isInitialState,\n      previousSearches,\n      onSearch,\n      keywordQuery,\n    } = this.props;\n\n    const prevChapRef = getPrevChapter();\n    const nextChapRef = getNextChapter();\n\n    const shouldDisplayNavBtn = !isSearchExpanded && passageSearchResults !== passageSearchResultsInitial;\n\n    return (\n      <div className=\"mobile-container\">\n        <Title isMobileView toggleSearch={this.toggleSearch} />\n        <Row className=\"content-row\">\n          <Col s={12} className=\"col-wrapper display-col\">\n\n            { isLoading && \n              <Col s={12} className=\"loading-spinner-col\">\n                <Preloader />\n              </Col>\n            }\n\n            {/* TODO make more DRY */}\n            { isInitialState && !isLoading &&\n              <Fade top duration={2000}>\n                <div className=\"pre-search-msg\">\n                  <p>Welcome to the Bible App. Search passages, verses, and keywords in the ESV Bible.</p>\n                </div>\n              </Fade>\n            }\n\n            { !isInitialState && \n              !isLoading &&\n              passageSearchResults !== passageSearchResultsInitial &&\n              passageSearchResults.passages &&\n              passageSearchResults.passages.length > 0 &&\n\n              <Row>\n                <Col s={12}>\n                  <div className=\"passage-text\">{passageSearchResults.passages}</div>\n                </Col>\n\n                <Col s={12}>\n                  <Copyright isMobileView />\n                </Col>\n              </Row>\n            } \n\n            { !isInitialState && \n              !isLoading &&\n              keywordSearchResults !== keywordSearchResultsInitial &&\n              keywordSearchResults.results &&\n              keywordSearchResults.results.length > 0 &&\n\n               <Row>\n                 <Col s={12}>\n                   <div className=\"results-count\">{keywordSearchResults.total_results} results found</div>\n                 </Col>\n                 <Col s={12}>\n                    {keywordSearchResults.results.map(result => (\n                      <KeywordResult key={`key-${result.reference}`} search={onSearch} {...result} />\n                    ))}\n                    <div>\n                      <ReactPaginate\n                        containerClassName=\"pagination\"\n                        activeClassName=\"active\"\n                        pageCount={keywordSearchResults.total_pages}\n                        pageRangeDisplayed={2}\n                        marginPagesDisplayed={2}\n                        initialPage={keywordSearchResults.page - 1}\n                        disableInitialCallback\n                        onPageChange={data => {\n                          const pageNumber = data.selected + 1;\n                          onSearch(keywordQuery, searchTypes.keyword, false, null, pageNumber)\n                        }}\n                      />\n                    </div>\n                 </Col>\n\n                 <Col s={12}>\n                   <Copyright isMobileView />\n                 </Col>\n               </Row>\n            } \n          </Col>\n        </Row>\n        <NavigationBar \n          isSearchExpanded={isSearchExpanded}\n          shouldDisplayNavBtn={shouldDisplayNavBtn}\n          prevChapRef={prevChapRef}\n          nextChapRef={nextChapRef}\n          onSearch={this.handleSearch}\n          toggleSearch={this.toggleSearch}\n          isInitialState={isInitialState}\n          isEnteringInput={isEnteringInput}\n          previousSearches={previousSearches}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MobileView;\n","import React, { useState } from 'react';\nimport { TextInput, Button, Row, Col, Icon, Switch } from 'react-materialize';\nimport { searchTypes } from '../../helpers/constants';\nimport ExactPhraseTip from '../../common/ExactPhraseTip';\n\nfunction Search (props) {\n\n    const { type, onSearch } = props;\n    const [text, setText] = useState('');\n    const [isExact, setIsExact] = useState(false);\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n        let updatedText = text;\n        \n        if (isExact) {\n            updatedText = `\"${text}\"`;\n        };\n        \n        const query = updatedText.trim().replace(/ /g, '+');\n        \n        onSearch(query, type, true, text);\n        setText('');\n    }\n\n    return (\n        <div className=\"search-container\">\n            <form onSubmit={handleSearch}>\n                <TextInput \n                    s={12}\n                    value={text}\n                    placeholder={type === searchTypes.keyword ? \"Repent\" : \"Jn 3:1-10\"}\n                    onChange={(e) => setText(e.target.value)}\n                />\n\n                { type === searchTypes.keyword &&\n                    <Col s={12} className=\"switch-wrapper\">\n                        <Switch \n                            id=\"exact-switch\"\n                            offLabel=\"Loose Phrase\"\n                            onChange={() => setIsExact(!isExact)}\n                            onLabel=\"Exact Phrase\"\n                            value={isExact ? 'Exact Phrase' : 'Loose Phrase'}\n                        />\n                        <Button\n                            tooltip={ExactPhraseTip}\n                            className=\"info-btn\"\n                        >\n                            <Icon>info_outline</Icon>\n                        </Button>\n                    </Col>\n                }\n                <Row>\n                    <Col s={12} className=\"btn-wrapper\">\n                        <Button \n                            className=\"search-btn\"\n                            type=\"submit\"\n                            waves=\"light\"\n                        >\n                            <Icon className=\"icon\">search</Icon>\n                            Search\n                        </Button>\n                    </Col>\n                </Row>\n            </form>\n        </div>\n    );\n}\n\nexport default Search;\n","const ExactPhraseTip = \"<div className='exact-phrase-tip'>\" +\n  \"Exact Phrase will return results for an exact phrase in scripture. \" +\n  \"For instance, the <i>Loose</i> query 'in love' returns many more results than \" +\n  \"the <i>Exact</i> query 'in love' because the latter only returns matches for the exact phrase.</div>\";\n\nexport default ExactPhraseTip;\n","import React from 'react';\nimport { Slide } from 'react-reveal';\nimport { Row, Icon } from 'react-materialize';\nimport { searchTypes } from '../../helpers/constants';\n\nexport default function SearchHistory (props) {\n  const { previousSearches, onSearch } = props\n\n  return (\n    <div className=\"search-history-container\">\n      {previousSearches.length > 0 &&\n        <Slide duration={750} left>\n          <h5 className=\"header\">Search History</h5>\n\n          {previousSearches.map(search => (\n            <Row \n              key={search.query}\n              role=\"button\"\n              tab={0}\n              className=\"search-item\"\n              onClick={() => {onSearch(search.query, search.type)}}\n              onKeyPress={() => {onSearch(search.query, search.type)}}\n            >\n              <h6 className=\"truncate\">{search.title}</h6>\n              {search.type === searchTypes.keyword ? (\n                <Icon className=\"keyword-icon\">short_text</Icon>\n              ) : (\n                <Icon className=\"passage-icon\">bookmark_border</Icon>\n              )}\n            </Row>\n          ))}\n        </Slide>\n      }\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport { Row, Col, Collapsible, CollapsibleItem, Icon, Preloader } from 'react-materialize';\nimport { searchTypes, keywordSearchResultsInitial, passageSearchResultsInitial } from '../helpers/constants';\nimport { Fade } from 'react-reveal';\nimport getLocationQuery from '../utils/getLocationQuery';\nimport Title from '../common/Title';\nimport Search from '../components/desktop/Search';\nimport Copyright from '../common/Copyright';\nimport KeywordResult from '../common/KeywordResult';\nimport ReadingTimeSvg from '../images/readingTime.svg';\nimport SearchHistory from '../components/desktop/SearchHistory';\nimport ReactPaginate from 'react-paginate';\n\nclass DesktopView extends Component {\n  state = {\n    isPassageExpanded: true,\n    isKeywordExpanded: false,\n  }\n\n  componentDidMount(){\n    const { location, onSearch } = this.props;\n    const data = getLocationQuery(location);\n    \n    if (data) {\n      onSearch(data.query, data.type);\n    }\n  }\n\n  render() {\n    const { \n      isPassageExpanded, \n      isKeywordExpanded, \n    } = this.state;\n\n    const {\n      onSearch,\n      getNextChapter,\n      getPrevChapter,\n      isLoading,\n      passageSearchResults,\n      keywordSearchResults,\n      isInitialState,\n      previousSearches,\n      keywordQuery,\n    } = this.props;\n\n    const prevChapRef = getPrevChapter();\n    const nextChapRef = getNextChapter();\n\n    return (\n      <div className=\"desktop-container\">\n        <Row className=\"row-wrapper\">\n          <Col xl={3} l={4} className=\"col-wrapper search-col\">\n            <Fade left>\n              <Title />\n              <Collapsible>\n                <CollapsibleItem \n                  header=\"Passages\" \n                  expanded={true} \n                  node=\"div\"\n                  onClick={() => this.setState({ \n                    isKeywordExpanded: false,\n                    isPassageExpanded: !isPassageExpanded,\n                  })}\n                  icon={isPassageExpanded ? <Icon>keyboard_arrow_down</Icon> : <Icon>keyboard_arrow_right</Icon>}\n                >\n                  <Search \n                    type={searchTypes.passages} \n                    onSearch={onSearch}\n                  />\n                </CollapsibleItem>\n                <CollapsibleItem \n                  header=\"Keyword\" \n                  node=\"div\"\n                  onClick={() => this.setState({ \n                    isKeywordExpanded: !isKeywordExpanded,\n                    isPassageExpanded: false,\n                  })}\n                  icon={isKeywordExpanded ? <Icon>keyboard_arrow_down</Icon> : <Icon>keyboard_arrow_right</Icon>}\n                >\n                  <Search \n                    type={searchTypes.keyword} \n                    onSearch={onSearch}\n                  />\n                </CollapsibleItem>\n              </Collapsible>\n              <SearchHistory\n                previousSearches={previousSearches}\n                onSearch={onSearch}\n              />\n              </Fade>\n          </Col>\n          <Col xl={9} l={8} className=\"col-wrapper display-col\">\n            { isLoading && !isInitialState &&\n              <Preloader className=\"loading-spinner\" />\n            }\n\n            { isInitialState && !isLoading &&\n              <Fade top duration={2000}>\n                <div className=\"pre-search-msg\">\n                  <p>Welcome to the Bible App. Search passages, verses, and keywords in the ESV Bible.</p>\n                  <img src={ReadingTimeSvg} alt=\"woman sitting under lamp reading book\" />\n                </div>\n              </Fade>\n            }\n\n            { !isInitialState && \n              !isLoading && \n              passageSearchResults !== passageSearchResultsInitial &&\n              passageSearchResults.passages &&\n              passageSearchResults.passages.length > 0 &&\n\n              <Row>\n                <Col s={1}>\n                  {prevChapRef && (\n                    <div \n                      className=\"chapter-nav nav-left\"\n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => onSearch(prevChapRef, searchTypes.passages)}\n                      onKeyPress={() => onSearch(prevChapRef, searchTypes.passages)}\n                      title=\"Previous Chapter\"\n                    >\n                      <Icon>chevron_left</Icon>\n                    </div>\n                  )}\n                </Col>\n                <Col s={10}>\n                  <div className=\"passage-text\">{passageSearchResults.passages}</div>\n                </Col>\n                <Col s={1}>\n                {nextChapRef && (\n                  <div \n                    className=\"chapter-nav nav-right\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => onSearch(nextChapRef, searchTypes.passages)}\n                    onKeyPress={() => onSearch(nextChapRef, searchTypes.passages)}\n                    title=\"Next Chapter\"\n                  >\n                    <Icon>chevron_right</Icon>\n                  </div>\n                )}\n                </Col>\n\n                <Col s={12}>\n                  <Copyright />\n                </Col>\n              </Row>\n            }\n\n            { !isInitialState && \n              !isLoading && \n              keywordSearchResults !== keywordSearchResultsInitial &&\n              keywordSearchResults.results &&\n              keywordSearchResults.results.length > 0 &&\n\n               <Row>\n                <Col s={12}>\n                  <div className=\"results-count\">{keywordSearchResults.total_results} results found</div>\n                </Col>\n                 <Col s={12}>\n                    {keywordSearchResults.results.map(result => (\n                      <KeywordResult \n                        key={`key-${result.reference}`} \n                        search={onSearch} \n                        {...result} \n                      />\n                    ))}\n                    <ReactPaginate\n                      containerClassName=\"pagination\"\n                      activeClassName=\"active\"\n                      pageCount={keywordSearchResults.total_pages}\n                      pageRangeDisplayed={4}\n                      marginPagesDisplayed={2}\n                      initialPage={keywordSearchResults.page - 1}\n                      disableInitialCallback\n                      onPageChange={data => {\n                        const pageNumber = data.selected + 1;\n                        onSearch(keywordQuery, searchTypes.keyword, false, null, pageNumber)\n                      }}\n                    />\n                 </Col>\n\n                 <Col s={12}>\n                   <Copyright />\n                 </Col>\n               </Row>\n            }\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default DesktopView;\n","import React from 'react';\n\nfunction Footer () {\n  return (\n    <footer className=\"footer-container\">\n        {'Created by '}\n        <a \n        href=\"https://jamesmart77.github.io\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        >\n          James Martineau\n        </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst config = {\n    proxy: false,\n    headers: {\n        'content-type': 'application/json',\n        'Authorization': 'Token 1db4878bd4ef4915253c027d47fcad03a11a739b',\n    },\n};\n\nconst getPassageResults = async (query) => {\n    const additionalParams = '&include-short-copyright=false&include-first-verse-numbers=false&include-chapter-numbers=false'\n    const { data }  = await axios.get(`https://api.esv.org/v3/passage/html/?q=${query}${additionalParams}`, config);\n    \n    if (data.passages.length === 0 ) throw new Error(`Invalid search. Query: ${query}`);\n    \n    data.passages = ReactHtmlParser(data.passages[0]);\n    return data;\n}\n\nconst getKeywordResults = async (query, pageNumber) => {\n    const page = pageNumber || 1;\n    const { data } = await axios.get(`https://api.esv.org/v3/passage/search/?q=${query}&page-size=25&page=${page}`, config);\n    \n    if (data.results.length === 0 ) throw new Error(`Invalid search. Query: ${query}`);\n    \n    return data;\n}\n\n// async function delay(ms) {\n//     return new Promise(resolve => setTimeout(resolve, ms));\n// }\n\nexport { getPassageResults, getKeywordResults};\n\n/*\n - add pagination for keyword search results and set\n - add search results sort OT/NT --> ASC/DESC\n*/","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; \nimport withSizes from 'react-sizes'\nimport MobileView from './MobileView';\nimport DesktopView from './DesktopView';\nimport Footer from '../common/Footer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { searchTypes, keywordSearchResultsInitial, passageSearchResultsInitial } from '../helpers/constants';\nimport { getPassageResults, getKeywordResults } from '../utils/searchUtil';\n\nclass App extends Component {\n  state = {\n    isLoading: false,\n    isInitialState: true,\n    keywordSearchResults: keywordSearchResultsInitial,\n    passageSearchResults: passageSearchResultsInitial,\n    previousSearches: [],\n    keywordQuery: '',\n  }\n\n  handleSearchHistory = (title, type, query) => {\n    const { previousSearches } = this.state;\n    const doesAlreadyExist = previousSearches.filter(item => item.query === query);\n    \n    if (doesAlreadyExist.length === 0) {\n      previousSearches.push({title, type, query});\n      this.setState({ previousSearches: [...previousSearches] });\n    }\n  }\n\n  handleKeyWordSearch = async(query, addToHistory, text, pageNumber) => {\n    const data = await getKeywordResults(query, pageNumber);\n    await this.setState({\n      keywordSearchResults: data,\n      passageSearchResults: passageSearchResultsInitial,\n      keywordQuery: query,\n    });\n\n    if (addToHistory) {\n      text = text.charAt(0).toUpperCase() + text.slice(1)\n      this.handleSearchHistory(text, searchTypes.keyword, query);\n    }\n  }\n\n  handlePassageSearch = async(query, addToHistory) => {\n    const data = await getPassageResults(query);\n    await this.setState({\n      passageSearchResults: data,\n      keywordSearchResults: keywordSearchResultsInitial,\n      keywordQuery: '',\n    });\n\n    if (addToHistory) {\n      this.handleSearchHistory(data.passage_meta[0].canonical, searchTypes.passages, query);\n    }\n  }\n\n  onSearch = async (query, type, addToHistory, text, pageNumber) => {\n\n    this.setState({\n      isLoading: true,\n      isInitialState: false,\n    });\n\n    console.log(\"pageNumber: \", pageNumber);\n\n    try {\n      if (type === searchTypes.keyword) {\n        await this.handleKeyWordSearch(query, addToHistory, text, pageNumber);\n      } else {\n        await this.handlePassageSearch(query, addToHistory);\n      }\n\n      window.location.hash = `${type}?q=${query}`;\n\n      this.setState({isInitialState: false});\n    } catch(error) {\n      console.error(\"ERROR: \", error);\n      toast.error(\"Search failed. Please simplify your search and try again.\");\n    }\n    this.setState({isLoading: false});\n  }\n\n  getPrevChapter = () => {\n    const { passageSearchResults } = this.state;\n    const prevChapArr = passageSearchResults.passage_meta[0].prev_chapter;\n\n    if (prevChapArr) return prevChapArr.join('-');\n  }\n\n  getNextChapter = () => {\n    const { passageSearchResults } = this.state;\n    const nextChapArr = passageSearchResults.passage_meta[0].next_chapter;\n\n    if (nextChapArr) return nextChapArr.join('-');\n  }\n\n\n  render() {\n    const { isDesktop } = this.props;\n    const {\n      isLoading,\n      isInitialState,\n      keywordSearchResults,\n      passageSearchResults,\n      previousSearches,\n      keywordQuery,\n    } = this.state;\n    \n    return (\n      <BrowserRouter>\n        <div className=\"app-container\">\n          <main>\n            <Switch>\n              <Route \n                path='/justScripture' \n                render={props =>\n                  isDesktop ? (\n                    <DesktopView \n                      onSearch={this.onSearch}\n                      getPrevChapter={this.getPrevChapter}\n                      getNextChapter={this.getNextChapter}\n                      isLoading={isLoading}\n                      isInitialState={isInitialState}\n                      keywordSearchResults={keywordSearchResults}\n                      passageSearchResults={passageSearchResults}\n                      previousSearches={previousSearches}\n                      keywordQuery={keywordQuery}\n                      {...props}\n                    />\n                  ) : (\n                    <MobileView \n                      onSearch={this.onSearch}\n                      getPrevChapter={this.getPrevChapter}\n                      getNextChapter={this.getNextChapter}\n                      isLoading={isLoading}\n                      isInitialState={isInitialState}\n                      keywordSearchResults={keywordSearchResults}\n                      passageSearchResults={passageSearchResults}\n                      previousSearches={previousSearches}\n                      keywordQuery={keywordQuery}\n                      {...props}\n                    />\n                  )\n                }\n              />\n            </Switch>\n          </main>\n\n          { isDesktop && \n            <Footer />\n          }\n\n          <ToastContainer \n            className=\"error-toast-container\"\n            autoClose={5000} \n            pauseOnHover\n          /> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n  isDesktop: width >= 900,\n})\n\nexport default withSizes(mapSizesToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.searchTypes = {\n    passages: \"passages\",\n    keyword: \"keyword\",\n};\n\nexports.keywordSearchResultsInitial = {\n    total_results: 0,\n    results: [\n      {\n        reference: \"\",\n        content: \"\"\n      },\n    ],\n  };\n\n  exports.passageSearchResultsInitial = {\n    passage_meta: [\n      {\n        canonical: \"\",\n        chapter_start: [],\n        chapter_end: [],\n        prev_verse: 0,\n        next_verse: 0,\n        prev_chapter: [],\n        next_chapter: []\n      }\n    ],\n    passages: \"\",\n  };","module.exports = __webpack_public_path__ + \"static/media/readingTime.d7bb64d8.svg\";"],"sourceRoot":""}