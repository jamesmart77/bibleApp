{"version":3,"sources":["helpers/constants.js","mobile/MobileView.js","common/Title.js","common/Search.js","utils/searchUtil.js","desktop/DesktopView.js","utils/getLocationQuery.js","common/Footer.js","common/App.js","serviceWorker.js","index.js"],"names":["exports","searchTypes","passages","keyword","MobileView","className","Component","Title","Search","props","type","onSearch","useState","text","setText","onSubmit","e","preventDefault","s","value","placeholder","onChange","target","waves","config","proxy","headers","getPassageResults","query","a","axios","get","data","ReactHtmlParser","getKeywordResults","DesktopView","state","isPassageExpanded","isKeywordExpanded","isLoading","isInitialState","keywordSearchResults","total_results","results","reference","content","passageSearchResults","passage_meta","canonical","chapter_start","chapter_end","prev_verse","next_verse","prev_chapter","next_chapter","history","cleanedValue","trim","replace","setState","console","error","toast","push","location","search","pathname","queryArr","split","length","response","includes","getLocationQuery","this","xl","m","left","header","expanded","node","onClick","icon","top","duration","Footer","currentYear","Date","getFullYear","href","rel","App","isDesktop","path","render","autoClose","withSizes","width","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.251eec93.chunk.js","sourcesContent":["exports.searchTypes = {\n    passages: \"passages\",\n    keyword: \"keyword\",\n}","import React, { Component } from 'react';\n\nclass MobileView extends Component {\n  render() {\n    return (\n      <div className=\"mobile-container\">\n          <h1> This is rendered only in Mobile </h1>\n      </div>\n    );\n  }\n}\n\nexport default MobileView;\n","import React from 'react';\n\nfunction Title () {\n  return (\n    <div className=\"title-container\">\n      <h2 className=\"text\">Bible App</h2>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { useState } from 'react';\nimport { TextInput, Button, Row, Col, Icon } from 'react-materialize';\nimport { searchTypes } from '../helpers/constants';\n\nfunction Search (props) {\n\n    const { type, onSearch } = props;\n    const [text, setText] = useState('');\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        onSearch(text, type);\n        setText('');\n    }\n\n    return (\n        <div className=\"search-container\">\n            <form onSubmit={handleSearch}>\n                <TextInput \n                    s={12}\n                    value={text}\n                    placeholder={type === searchTypes.keyword ? \"Repent\" : \"John 3:1-10\"}\n                    onChange={(e) => setText(e.target.value)}\n                />\n                <Row>\n                    <Col s={12} className=\"btn-wrapper\">\n                        <Button \n                            className=\"search-btn\"\n                            type=\"submit\"\n                            waves=\"light\"\n                        >\n                            <Icon className=\"icon\">search</Icon>\n                            Search\n                        </Button>\n                    </Col>\n                </Row>\n            </form>\n        </div>\n    );\n}\n\nexport default Search;\n","import axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst config = {\n    proxy: false,\n    headers: {\n        'content-type': 'application/json',\n        'Authorization': 'Token 1db4878bd4ef4915253c027d47fcad03a11a739b',\n    },\n};\n\nconst getPassageResults = async (query) => {\n    const { data }  = await axios.get(`https://api.esv.org/v3/passage/html/?q=${query}`, config);\n    data.passages = ReactHtmlParser(data.passages[0]);\n    return data;\n}\n\nconst getKeywordResults = async (query) => {\n    const { data } = await axios.get(`https://api.esv.org/v3/passage/search/?q=${query}`, config);\n    return data;\n}\n\nexport { getPassageResults, getKeywordResults};","import React, { Component } from 'react';\nimport { Row, Col, Collapsible, CollapsibleItem, Icon, Preloader } from 'react-materialize';\nimport Title from '../common/Title';\nimport Search from '../common/Search';\nimport { searchTypes } from '../helpers/constants';\nimport { getPassageResults, getKeywordResults } from '../utils/searchUtil';\nimport { toast } from 'react-toastify';\nimport { Fade } from 'react-reveal';\nimport getLocationQuery from '../utils/getLocationQuery';\n\nclass DesktopView extends Component {\n  state = {\n    isPassageExpanded: true,\n    isKeywordExpanded: false,\n    isLoading: false,\n    isInitialState: true,\n    keywordSearchResults: {\n      total_results: 0,\n      results: [\n        {\n          reference: \"\",\n          content: \"\"\n        },\n      ],\n    },\n    passageSearchResults: {\n      passage_meta: [\n        {\n          canonical: \"\",\n          chapter_start: [],\n          chapter_end: [],\n          prev_verse: 0,\n          next_verse: 0,\n          prev_chapter: [],\n          next_chapter: []\n        }\n      ],\n      passages: \"\",\n    },\n  }\n\n  componentDidMount(){\n    const { location } = this.props;\n    const data = getLocationQuery(location);\n    \n    if (data) {\n      this.onSearch(data.query, data.type);\n    }\n  }\n\n  onSearch = async (text, type) => {\n    const { history } = this.props;\n    const cleanedValue = text.trim().replace(' ', '+');\n\n    this.setState({\n      isLoading: true,\n      isInitialState: false,\n    });\n\n    try {\n      if (type === searchTypes.keyword) {\n        const data = await getKeywordResults(cleanedValue);\n\n        await this.setState({keywordSearchResults: data});\n      } else {\n        const data = await getPassageResults(cleanedValue);\n        await this.setState({passageSearchResults: data});\n      }\n    } catch(error) {\n      console.error(\"ERROR: \", error);\n      toast.error(\"Search failed. Please simplify your search and try again.\");\n    }\n\n    history.push(`/bibleApp/${type}?q=${cleanedValue}`);\n\n    this.setState({isLoading: false});\n  }\n\n\n  render() {\n    const { \n      isPassageExpanded, \n      isKeywordExpanded, \n      isLoading,\n      passageSearchResults,\n      isInitialState,\n    } = this.state;\n\n    return (\n      <div className=\"desktop-container\">\n        <Row className=\"row-wrapper\">\n          <Col xl={3} m={4} className=\"col-wrapper search-col\">\n            <Fade left>\n              <Title />\n              <Collapsible>\n                <CollapsibleItem \n                  header=\"Passages\" \n                  expanded={true} \n                  node=\"div\"\n                  onClick={() => this.setState({ \n                    isKeywordExpanded: false,\n                    isPassageExpanded: !isPassageExpanded,\n                  })}\n                  icon={isPassageExpanded ? <Icon>keyboard_arrow_down</Icon> : <Icon>keyboard_arrow_right</Icon>}\n                >\n                  <Search type={searchTypes.passages} onSearch={this.onSearch}/>\n                </CollapsibleItem>\n                <CollapsibleItem \n                  header=\"Keyword\" \n                  node=\"div\"\n                  onClick={() => this.setState({ \n                    isKeywordExpanded: !isKeywordExpanded,\n                    isPassageExpanded: false,\n                  })}\n                  icon={isKeywordExpanded ? <Icon>keyboard_arrow_down</Icon> : <Icon>keyboard_arrow_right</Icon>}\n                >\n                  <Search type={searchTypes.keyword} onSearch={this.onSearch}/>\n                </CollapsibleItem>\n              </Collapsible>\n              </Fade>\n          </Col>\n          <Col xl={9} m={8} className=\"col-wrapper display-col\">\n            { isLoading && !isInitialState &&\n              <Preloader className=\"loading-spinner\" />\n            }\n\n            { isInitialState && !isLoading &&\n              <Fade top duration={2000}>\n                <div className=\"pre-search-msg\">\n                  <p>Welcome to the Bible App. Search passages, verses, and keywords in the ESV Bible.</p>\n                  <Icon>search</Icon>\n                </div>\n              </Fade>\n            }\n\n            { !isInitialState && \n              !isLoading && \n              passageSearchResults.passages &&\n              passageSearchResults.passages.length > 0 &&\n\n              <Row>\n                <Col s={12}>\n                  <div className=\"passage-text\">{passageSearchResults.passages}</div>\n                </Col>\n              </Row>\n            }\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default DesktopView;\n","import { searchTypes } from '../helpers/constants';\n\nexport default function (location) {\n    const { search, pathname } = location;\n    const { keyword, passages } = searchTypes;\n\n    const queryArr = search.split('q=');\n    \n    if (pathname === '/bibleApp' || queryArr.length === 1) return\n    \n    let response = {\n        type: passages,\n        query: queryArr[1],\n    };\n    \n    if (pathname.includes(keyword)) {\n        response.type = keyword;\n    }\n\n    return response;\n}","import React from 'react';\n\nfunction Footer () {\n  const currentYear = new Date().getFullYear();\n  \n  return (\n    <footer className=\"footer-container\">\n        &copy; {currentYear} \n        {' '}\n        <a \n        href=\"https://jamesmart77.github.io\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        >\n          James Martineau\n        </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; \nimport withSizes from 'react-sizes'\nimport MobileView from '../mobile/MobileView';\nimport DesktopView from '../desktop/DesktopView';\nimport Footer from './Footer';\nimport { ToastContainer } from 'react-toastify';\n\nclass App extends Component {\n\n  render() {\n    const { isDesktop } = this.props;\n    \n    return (\n      <BrowserRouter>\n        <div className=\"app-container\">\n          <main>\n            <Switch>\n              <Route path='/bibleApp' render={props => {\n                return isDesktop ? <DesktopView {...props} /> : <MobileView />\n              }}/>\n            </Switch>\n          </main>\n\n          <Footer />\n\n          <ToastContainer autoClose={false} /> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n  isDesktop: width >= 900,\n})\n\nexport default withSizes(mapSizesToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './common/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}