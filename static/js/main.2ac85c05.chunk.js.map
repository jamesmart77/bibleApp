{"version":3,"sources":["utils/searchUtil.js","utils/getLocationQuery.js","common/Title.js","common/MobileSearch.js","common/Copyright.js","common/KeywordResult.js","containers/MobileView.js","common/Search.js","containers/DesktopView.js","common/Footer.js","containers/App.js","serviceWorker.js","index.js","helpers/constants.js","images/readingTime.svg"],"names":["config","proxy","headers","getPassageResults","query","a","delay","axios","get","data","passages","length","Error","ReactHtmlParser","getKeywordResults","results","ms","Promise","resolve","setTimeout","location","search","pathname","keyword","searchTypes","queryArr","split","response","type","includes","Title","props","isMobileView","toggleSearch","resetApp","window","href","className","title","tabIndex","onClick","onKeyPress","MobileSearch","onSearch","isEnteringInput","useState","text","setText","setType","s","m","offset","onSubmit","e","preventDefault","id","value","placeholder","onChange","target","waves","Copyright","KeywordResult","result","content","reference","chapter","right","duration","role","MobileView","state","isSearchExpanded","isInitialState","isLoading","keywordSearchResults","keywordSearchResultsInitial","passageSearchResults","passageSearchResultsInitial","setState","history","cleanedValue","trim","replace","push","console","error","toast","getPrevChapter","passage_meta","prev_chapter","join","getNextChapter","next_chapter","handleInputListener","screen","height","_this","requestAnimationFrame","searchInput","document","getElementById","addEventListener","this","getLocationQuery","prevChapRef","nextChapRef","shouldDisplayNavBtn","top","total_results","map","key","rel","bottom","when","Component","Search","viewMode","DesktopView","isPassageExpanded","isKeywordExpanded","xl","left","header","expanded","node","icon","src","ReadingTimeSvg","alt","Footer","App","isDesktop","path","render","autoClose","withSizes","width","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message","exports","canonical","chapter_start","chapter_end","prev_verse","next_verse","module"],"mappings":"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","file":"static/js/main.2ac85c05.chunk.js","sourcesContent":["import axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst config = {\n    proxy: false,\n    headers: {\n        'content-type': 'application/json',\n        'Authorization': 'Token 1db4878bd4ef4915253c027d47fcad03a11a739b',\n    },\n};\n\nconst getPassageResults = async (query) => {\n    await delay(3000);\n    const { data }  = await axios.get(`https://api.esv.org/v3/passage/html/?q=${query}`, config);\n    \n    if (data.passages.length === 0 ) throw new Error(`Invalid search. Query: ${query}`);\n    \n    data.passages = ReactHtmlParser(data.passages[0]);\n    return data;\n}\n\nconst getKeywordResults = async (query) => {\n    const { data } = await axios.get(`https://api.esv.org/v3/passage/search/?q=${query}&page-size=100`, config);\n    \n    if (data.results.length === 0 ) throw new Error(`Invalid search. Query: ${query}`);\n    \n    return data;\n}\n\nasync function delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\nexport { getPassageResults, getKeywordResults};","import { searchTypes } from '../helpers/constants';\n\nexport default function (location) {\n    const { search, pathname } = location;\n    const { keyword, passages } = searchTypes;\n\n    const queryArr = search.split('q=');\n    \n    if (pathname === '/bibleApp' || queryArr.length === 1) return\n    \n    let response = {\n        type: passages,\n        query: queryArr[1],\n    };\n    \n    if (pathname.includes(keyword)) {\n        response.type = keyword;\n    }\n\n    return response;\n}","import React from 'react';\n\nfunction Title (props) {\n  const { isMobileView, toggleSearch } = props;\n\n  const resetApp = () => {\n    window.location.href = \"/bibleApp\";\n    \n    if (isMobileView) {\n      toggleSearch();\n    }\n  }\n  \n  return (\n    <div\n      className={isMobileView ? \"title-container mobile\" : \"title-container\"}\n      title=\"Reset Searches\"\n    >\n        <h2 \n          tabIndex={0}\n          onClick={resetApp}\n          onKeyPress={resetApp} \n          className=\"text\"\n        >\n          Bible App\n        </h2>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { useState } from 'react';\nimport { TextInput, Button, Row, Col, Icon } from 'react-materialize';\nimport { searchTypes } from '../helpers/constants';\n\nfunction MobileSearch (props) {\n\n    const { onSearch, isEnteringInput } = props;\n    const [text, setText] = useState('');\n    const [type, setType] = useState(searchTypes.passages);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        onSearch(text, type);\n        setText('');\n    }\n\n    return (\n        <div className=\"mobile-search-container\">\n            <div className={type === searchTypes.passages ? \"wrapper passages\": \"wrapper keyword\"}>\n                <Row className={isEnteringInput ? \"type-row no-padding-bottom\" : \"type-row\"}>\n                    <Col \n                        className={isEnteringInput ? \"type-col no-padding-bottom\" : \"type-col\"} \n                        s={10} \n                        m={8} \n                        offset=\"s1 m2\"\n                    >\n                        <Button\n                            className={type === searchTypes.passages ? \"type-btn passage-btn active\" : \"type-btn passage-btn\"}\n                            onClick={() => setType(searchTypes.passages)}\n                            onKeyPress={() => setType(searchTypes.passages)}\n                        >\n                            <Icon>bookmark_border</Icon>\n                            {type === searchTypes.passages && \"Passages\"} \n                        </Button>\n                        <Button\n                            className={type === searchTypes.keyword ? \"type-btn keyword-btn active\" : \"type-btn keyword-btn\"}\n                            onClick={() => setType(searchTypes.keyword)}\n                            onKeyPress={() => setType(searchTypes.keyword)}\n                        >\n                            <Icon>all_inclusive</Icon>\n                            {type === searchTypes.keyword && \"Keyword\"}\n                        </Button>\n                    \n                        <form onSubmit={handleSearch}>\n                            <Row>\n                                <Col s={10} offset=\"s1\">\n                                    <TextInput \n                                        id=\"search\"\n                                        s={12}\n                                        value={text}\n                                        placeholder={type === searchTypes.keyword ? \"Repent\" : \"John 3:1-10\"}\n                                        onChange={(e) => setText(e.target.value)}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col s={12} className=\"btn-wrapper\">\n                                    <Button \n                                        className=\"search-btn\"\n                                        type=\"submit\"\n                                        waves=\"light\"\n                                    >\n                                        Search\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </form>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    );\n}\n\nexport default MobileSearch;\n","import React from 'react';\n\nfunction Copyright (props) {\n  const { isMobileView } = props;\n\n  return (\n    <div className={isMobileView ? \"copyright-container mobile\" : \"copyright-container\"}>\n      <small>\n        Scripture quotations are from the ESV® Bible (The Holy Bible, English Standard Version®), \n        copyright &copy; 2001 by Crossway, a publishing ministry of Good News Publishers. \n        Used by permission. All rights reserved. You may not copy or download more than 500 consecutive \n        verses of the ESV Bible or more than one half of any book of the ESV Bible.\n      </small>\n    </div>\n  );\n}\n\nexport default Copyright;\n","import React from 'react';\nimport { Fade } from 'react-reveal';\nimport { searchTypes } from '../helpers/constants';\n\nfunction KeywordResult (result) {\n  const { content, reference, search } = result\n  const chapter = reference.split(\":\")[0];\n\n  return (\n    <Fade right duration={500}>\n      <div className=\"keyword-result-container\">\n        <h5 className=\"title\">{reference}</h5>\n        <div className=\"text\">{content}</div>\n        <div \n          role=\"button\"\n          tabIndex={0}\n          className=\"read-chapter\"\n          title={`Read ${chapter}`}\n          onClick={() => search(chapter, searchTypes.passages)}\n          onKeyPress={() => search(chapter, searchTypes.passages)}\n        >\n          Read Chapter\n        </div>\n      </div>\n    </Fade>\n  );\n}\n\nexport default KeywordResult;\n","import React, { Component } from 'react';\nimport { Row, Col, Icon, Preloader } from 'react-materialize';\nimport { searchTypes, keywordSearchResultsInitial, passageSearchResultsInitial } from '../helpers/constants';\nimport { getPassageResults, getKeywordResults } from '../utils/searchUtil';\nimport { toast } from 'react-toastify';\nimport { Fade } from 'react-reveal';\nimport getLocationQuery from '../utils/getLocationQuery';\nimport Title from '../common/Title';\nimport MobileSearch from '../common/MobileSearch';\nimport Copyright from '../common/Copyright';\nimport KeywordResult from '../common/KeywordResult';\n\nclass MobileView extends Component {\n  state = {\n    isSearchExpanded: false,\n    isInitialState: true,\n    isEnteringInput: false,\n    isLoading: false,\n    keywordSearchResults: keywordSearchResultsInitial,\n    passageSearchResults: passageSearchResultsInitial,\n  }\n\n  componentDidMount(){\n    const { location } = this.props;\n    const data = getLocationQuery(location);\n    \n    if (data) {\n      this.onSearch(data.query, data.type);\n    } else {\n      this.setState({isSearchExpanded: true});\n    }\n    this.handleInputListener();\n  }\n\n  toggleSearch = () => {\n    const { isSearchExpanded } = this.state;\n    this.setState({ isSearchExpanded: !isSearchExpanded });\n  }\n\n  onSearch = async (text, type) => {\n    const { history } = this.props;\n    const cleanedValue = text.trim().replace(/ /g, '+');\n\n    await this.setState({\n      isSearchExpanded: false,\n      isEnteringInput: false,\n      isLoading: true,\n    });\n\n    try {\n      if (type === searchTypes.keyword) {\n        const data = await getKeywordResults(cleanedValue);\n        await this.setState({\n          keywordSearchResults: data,\n          passageSearchResults: passageSearchResultsInitial,\n        });\n      } else {\n        const data = await getPassageResults(cleanedValue);\n        await this.setState({\n          passageSearchResults: data,\n          keywordSearchResults: keywordSearchResultsInitial,\n        });\n      }\n      history.push(`/bibleApp/${type}?q=${cleanedValue}`);\n  \n      this.setState({isInitialState: false});\n    } catch(error) {\n      console.error(\"ERROR: \", error);\n      toast.error(\"Search failed. Please simplify your search and try again.\");\n    }\n\n    this.setState({isLoading: false});\n  }\n\n  getPrevChapter = () => {\n    const { passageSearchResults } = this.state;\n    const prevChapArr = passageSearchResults.passage_meta[0].prev_chapter;\n\n    return prevChapArr.join('-');\n  }\n\n  getNextChapter = () => {\n    const { passageSearchResults } = this.state;\n    const nextChapArr = passageSearchResults.passage_meta[0].next_chapter;\n\n    return nextChapArr.join('-');\n  }\n\n  handleInputListener = () => {\n    if (window.screen.height > 700) return;\n    \n    const _this = this;\n  \n    /* \n    wait for DOM to paint before running listener dependent code.\n    need to modify CSS for devices < 700 px high for input visibility\n    */\n    window.requestAnimationFrame(function() {\n      const searchInput = document.getElementById('search');\n\n      if (searchInput) {\n        searchInput.addEventListener('focus', () => {\n            _this.setState({isEnteringInput: true});  \n          });\n      }\n    })\n  }\n\n\n  render() {\n    const { \n      isSearchExpanded, \n      passageSearchResults,\n      keywordSearchResults,\n      isInitialState,\n      isEnteringInput,\n      isLoading,\n    } = this.state;\n\n    const prevChapRef = this.getPrevChapter();\n    const nextChapRef = this.getNextChapter();\n    const shouldDisplayNavBtn = !isSearchExpanded && passageSearchResults !== passageSearchResultsInitial;\n\n    return (\n      <div className=\"mobile-container\">\n        <Title isMobileView toggleSearch={this.toggleSearch} />\n        <Row className=\"content-row\">\n          <Col s={12} className=\"col-wrapper display-col\">\n\n            { isLoading && \n              <Col s={12} className=\"loading-spinner-col\">\n                <Preloader />\n              </Col>\n            }\n\n            {/* TODO make more DRY */}\n            { isInitialState && !isLoading &&\n              <Fade top duration={2000}>\n                <div className=\"pre-search-msg\">\n                  <p>Welcome to the Bible App. Search passages, verses, and keywords in the ESV Bible.</p>\n                </div>\n              </Fade>\n            }\n\n            { !isInitialState && \n              !isLoading &&\n              passageSearchResults !== passageSearchResultsInitial &&\n              passageSearchResults.passages &&\n              passageSearchResults.passages.length > 0 &&\n\n              <Row>\n                <Col s={12}>\n                  <div className=\"passage-text\">{passageSearchResults.passages}</div>\n                </Col>\n\n                <Col s={12}>\n                  <Copyright isMobileView />\n                </Col>\n              </Row>\n            } \n\n            { !isInitialState && \n              !isLoading &&\n              keywordSearchResults !== keywordSearchResultsInitial &&\n              keywordSearchResults.results &&\n              keywordSearchResults.results.length > 0 &&\n\n               <Row>\n                 <Col s={12}>\n                   <div className=\"results-count\">{keywordSearchResults.total_results} results found</div>\n                 </Col>\n                 <Col s={12}>\n                    {keywordSearchResults.results.map(result => (\n                      <KeywordResult key={`key-${result.reference}`} search={this.onSearch} {...result} />\n                    ))}\n                 </Col>\n\n                 <Col s={12}>\n                   <Copyright isMobileView />\n                 </Col>\n               </Row>\n            } \n          </Col>\n        </Row>\n        <Row className=\"navigator-row\">\n            { isSearchExpanded &&\n              <Col s={12} className=\"author-col\">\n                <small>{'Created by '}\n                  <a \n                  href=\"https://jamesmart77.github.io\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  >\n                    James Martineau\n                  </a>\n                </small>\n              </Col>\n            }\n            <Col s={12} className=\"mobile-search-wrapper\">\n              <Fade bottom duration={750} when={isSearchExpanded}>\n                {isSearchExpanded &&\n                  <MobileSearch \n                    isEnteringInput={isEnteringInput}\n                    onSearch={this.onSearch} \n                  />\n                }\n              </Fade>\n            </Col>\n            <Col s={3}>\n                {shouldDisplayNavBtn &&\n                  <div\n                    className=\"chapter-nav\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => this.onSearch(prevChapRef, searchTypes.passages)}\n                    onKeyPress={() => this.onSearch(prevChapRef, searchTypes.passages)}\n                    title=\"Previous Chapter\"\n                  >\n                    <Icon>chevron_left</Icon>\n                  </div>\n                }\n            </Col>\n            <Col s={6} className=\"search-toggle-col\">\n                <div className=\"search-toggle-btn\" onClick={this.toggleSearch}>\n                    <Icon>{isSearchExpanded ? 'keyboard_arrow_down' : 'search'}</Icon>\n                </div>\n            </Col>\n            <Col s={3}>\n                {shouldDisplayNavBtn ? (\n                  <div\n                    className=\"chapter-nav nav-right\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => this.onSearch(nextChapRef, searchTypes.passages)}\n                    onKeyPress={() => this.onSearch(nextChapRef, searchTypes.passages)}\n                    title=\"Next Chapter\"\n                  >\n                    <Icon>chevron_right</Icon>\n                  </div>\n                ) : (\n                  <></>\n                )}\n            </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default MobileView;\n","import React, { useState } from 'react';\nimport { TextInput, Button, Row, Col, Icon } from 'react-materialize';\nimport { searchTypes } from '../helpers/constants';\n\nfunction Search (props) {\n\n    const { type, onSearch, viewMode } = props;\n    const [text, setText] = useState('');\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        onSearch(text, type);\n        setText('');\n    }\n\n    return (\n        <div className=\"search-container\">\n            <form onSubmit={handleSearch}>\n                <TextInput \n                    s={12}\n                    value={text}\n                    placeholder={type === searchTypes.keyword ? \"Repent\" : \"John 3:1-10\"}\n                    onChange={(e) => setText(e.target.value)}\n                />\n                <Row>\n                    <Col s={12} className=\"btn-wrapper\">\n                        <Button \n                            className={`${viewMode} search-btn`}\n                            type=\"submit\"\n                            waves=\"light\"\n                        >\n                            <Icon className=\"icon\">search</Icon>\n                            Search\n                        </Button>\n                    </Col>\n                </Row>\n            </form>\n        </div>\n    );\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Row, Col, Collapsible, CollapsibleItem, Icon, Preloader } from 'react-materialize';\nimport { searchTypes, keywordSearchResultsInitial, passageSearchResultsInitial } from '../helpers/constants';\nimport { getPassageResults, getKeywordResults } from '../utils/searchUtil';\nimport { toast } from 'react-toastify';\nimport { Fade } from 'react-reveal';\nimport getLocationQuery from '../utils/getLocationQuery';\nimport Title from '../common/Title';\nimport Search from '../common/Search';\nimport Copyright from '../common/Copyright';\nimport KeywordResult from '../common/KeywordResult';\nimport ReadingTimeSvg from '../images/readingTime.svg';\n\nclass DesktopView extends Component {\n  state = {\n    isPassageExpanded: true,\n    isKeywordExpanded: false,\n    isLoading: false,\n    isInitialState: true,\n    keywordSearchResults: keywordSearchResultsInitial,\n    passageSearchResults: passageSearchResultsInitial,\n  }\n\n  componentDidMount(){\n    const { location } = this.props;\n    const data = getLocationQuery(location);\n    \n    if (data) {\n      this.onSearch(data.query, data.type);\n    }\n  }\n\n  onSearch = async (text, type) => {\n    const { history } = this.props;\n    const cleanedValue = text.trim().replace(/ /g, '+');\n\n    this.setState({\n      isLoading: true,\n      isInitialState: false,\n    });\n\n    try {\n      if (type === searchTypes.keyword) {\n        const data = await getKeywordResults(cleanedValue);\n        await this.setState({\n          keywordSearchResults: data,\n          passageSearchResults: passageSearchResultsInitial,\n        });\n      } else {\n        const data = await getPassageResults(cleanedValue);\n        await this.setState({\n          passageSearchResults: data,\n          keywordSearchResults: keywordSearchResultsInitial,\n        });\n      }\n\n      history.push(`/bibleApp/${type}?q=${cleanedValue}`);\n\n      this.setState({isLoading: false});\n    } catch(error) {\n      console.error(\"ERROR: \", error);\n      toast.error(\"Search failed. Please simplify your search and try again.\");\n    }\n  }\n\n  getPrevChapter = () => {\n    const { passageSearchResults } = this.state;\n    const prevChapArr = passageSearchResults.passage_meta[0].prev_chapter;\n\n    return prevChapArr.join('-');\n  }\n\n  getNextChapter = () => {\n    const { passageSearchResults } = this.state;\n    const nextChapArr = passageSearchResults.passage_meta[0].next_chapter;\n\n    return nextChapArr.join('-');\n  }\n\n\n  render() {\n    const { \n      isPassageExpanded, \n      isKeywordExpanded, \n      isLoading,\n      passageSearchResults,\n      keywordSearchResults,\n      isInitialState,\n    } = this.state;\n\n    const prevChapRef = this.getPrevChapter();\n    const nextChapRef = this.getNextChapter();\n\n    return (\n      <div className=\"desktop-container\">\n        <Row className=\"row-wrapper\">\n          <Col xl={3} m={4} className=\"col-wrapper search-col\">\n            <Fade left>\n              <Title />\n              <Collapsible>\n                <CollapsibleItem \n                  header=\"Passages\" \n                  expanded={true} \n                  node=\"div\"\n                  onClick={() => this.setState({ \n                    isKeywordExpanded: false,\n                    isPassageExpanded: !isPassageExpanded,\n                  })}\n                  icon={isPassageExpanded ? <Icon>keyboard_arrow_down</Icon> : <Icon>keyboard_arrow_right</Icon>}\n                >\n                  <Search viewMode='desktop-view' type={searchTypes.passages} onSearch={this.onSearch}/>\n                </CollapsibleItem>\n                <CollapsibleItem \n                  header=\"Keyword\" \n                  node=\"div\"\n                  onClick={() => this.setState({ \n                    isKeywordExpanded: !isKeywordExpanded,\n                    isPassageExpanded: false,\n                  })}\n                  icon={isKeywordExpanded ? <Icon>keyboard_arrow_down</Icon> : <Icon>keyboard_arrow_right</Icon>}\n                >\n                  <Search viewMode='desktop-view' type={searchTypes.keyword} onSearch={this.onSearch}/>\n                </CollapsibleItem>\n              </Collapsible>\n              </Fade>\n          </Col>\n          <Col xl={9} m={8} className=\"col-wrapper display-col\">\n            { isLoading && !isInitialState &&\n              <Preloader className=\"loading-spinner\" />\n            }\n\n            { isInitialState && !isLoading &&\n              <Fade top duration={2000}>\n                <div className=\"pre-search-msg\">\n                  <p>Welcome to the Bible App. Search passages, verses, and keywords in the ESV Bible.</p>\n                  <img src={ReadingTimeSvg} alt=\"woman sitting under lamp reading book\" />\n                </div>\n              </Fade>\n            }\n\n            { !isInitialState && \n              !isLoading && \n              passageSearchResults !== passageSearchResultsInitial &&\n              passageSearchResults.passages &&\n              passageSearchResults.passages.length > 0 &&\n\n              <Row>\n                <Col s={1}>\n                  <div \n                    className=\"chapter-nav nav-left\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => this.onSearch(prevChapRef, searchTypes.passages)}\n                    onKeyPress={() => this.onSearch(prevChapRef, searchTypes.passages)}\n                    title=\"Previous Chapter\"\n                  >\n                    <Icon>chevron_left</Icon>\n                  </div>\n                </Col>\n                <Col s={10}>\n                  <div className=\"passage-text\">{passageSearchResults.passages}</div>\n                </Col>\n                <Col s={1}>\n                  <div \n                    className=\"chapter-nav nav-right\"\n                    role=\"button\"\n                    tabIndex={0}\n                    onClick={() => this.onSearch(nextChapRef, searchTypes.passages)}\n                    onKeyPress={() => this.onSearch(nextChapRef, searchTypes.passages)}\n                    title=\"Next Chapter\"\n                  >\n                    <Icon>chevron_right</Icon>\n                  </div>\n                </Col>\n\n                <Col s={12}>\n                  <Copyright />\n                </Col>\n              </Row>\n            }\n\n            { !isInitialState && \n              !isLoading && \n              keywordSearchResults !== keywordSearchResultsInitial &&\n              keywordSearchResults.results &&\n              keywordSearchResults.results.length > 0 &&\n\n               <Row>\n                 <Col s={12}>\n                    {keywordSearchResults.results.map(result => (\n                      <KeywordResult key={`key-${result.reference}`} search={this.onSearch} {...result} />\n                    ))}\n                 </Col>\n\n                 <Col s={12}>\n                   <Copyright />\n                 </Col>\n               </Row>\n            }\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default DesktopView;\n","import React from 'react';\n\nfunction Footer () {\n  return (\n    <footer className=\"footer-container\">\n        {'Built & Designed by '}\n        <a \n        href=\"https://jamesmart77.github.io\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        >\n          James Martineau\n        </a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'; \nimport withSizes from 'react-sizes'\nimport MobileView from './MobileView';\nimport DesktopView from './DesktopView';\nimport Footer from '../common/Footer';\nimport { ToastContainer } from 'react-toastify';\n\nclass App extends Component {\n\n  render() {\n    const { isDesktop } = this.props;\n    \n    return (\n      <BrowserRouter>\n        <div className=\"app-container\">\n          <main>\n            <Switch>\n              <Route path='/bibleApp' render={props => {\n                return isDesktop ? <DesktopView {...props} /> : <MobileView {...props} />\n              }}/>\n            </Switch>\n          </main>\n\n          { isDesktop && \n            <Footer />\n          }\n\n          <ToastContainer \n            className=\"error-toast-container\"\n            autoClose={false} \n          /> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n  isDesktop: width >= 900,\n})\n\nexport default withSizes(mapSizesToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.searchTypes = {\n    passages: \"passages\",\n    keyword: \"keyword\",\n};\n\nexports.keywordSearchResultsInitial = {\n    total_results: 0,\n    results: [\n      {\n        reference: \"\",\n        content: \"\"\n      },\n    ],\n  };\n\n  exports.passageSearchResultsInitial = {\n    passage_meta: [\n      {\n        canonical: \"\",\n        chapter_start: [],\n        chapter_end: [],\n        prev_verse: 0,\n        next_verse: 0,\n        prev_chapter: [],\n        next_chapter: []\n      }\n    ],\n    passages: \"\",\n  };","module.exports = __webpack_public_path__ + \"static/media/readingTime.d7bb64d8.svg\";"],"sourceRoot":""}